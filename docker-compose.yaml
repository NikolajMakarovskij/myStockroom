services:
  backend:
    build:
      context: ./backend
      target: dev
    hostname: backend
    image: backend
    container_name: backend
    command: uv run gunicorn backend.wsgi:application --bind 0.0.0.0:8010 --timeout 120 --workers=3 --threads=3 --worker-connections=1000 # параметры сервера gunicorn
    restart: always
    volumes:
      - ./backend/src:/backend/src
      - ./site:/backend/site
      - ./public:/public
      - ./backend/src/static:/home/backend/web/static
      - ./backend/src/media:/home/backend/web/mediafiles
    ports:
      - "8010:8010"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  react:
    build:
      context: ./frontend
    hostname: frontend
    container_name: frontend
    image: frontend
    restart: always
    volumes:
      - ./frontend:/frontend
      - ./backend/src/static:/home/backend/web/static
      - ./backend/src/media:/home/backend/web/mediafiles
      - /frontend/node_modules
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    command: npm run dev
    depends_on:
      - backend

  db:
    container_name: db
    image: postgres:17-alpine
    restart: always
    env_file:
      - ./.env
    volumes:
      - ./database/Init_db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database:/var/lib/postgresql/data

  angie:
    build: ./angie
    restart: always
    hostname: stock
    container_name: angie
    image: angie
    volumes:
      - ./frontend:/frontend
      - ./backend/src/static:/home/backend/web/static
      - ./backend/src/media:/home/backend/web/mediafiles
    ports:
      - "80:80"
    depends_on:
      - react
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    restart: always

  celery:
    restart: always
    image: backend
    container_name: celery
    build:
      context: ./backend
      target: dev
    command: uv run celery -A backend worker -l info
    volumes:
      - ./backend/src:/backend/src
    env_file:
      - ./.env
    depends_on:
      - backend

  celery-beat:
    image: backend
    build:
      context: ./backend
      target: dev
    command: uv run celery -A backend beat -l info
    container_name: celery-beat
    restart: always
    volumes:
      - ./backend/src:/backend/src
    env_file:
      - ./.env
    depends_on:
      - celery

  flower:
    image: backend
    build:
      context: ./backend
      target: dev
    command: uv run celery --broker=redis://redis:6379/0 -A backend flower --port=5555
    container_name: flower
    restart: always
    volumes:
      - ./backend/src:/backend/src
    env_file:
      - ./.env
    ports:
      - "5557:5555"
    depends_on:
      - celery
