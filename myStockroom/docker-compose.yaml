version: "3.9"

services:
  web:
    build: ./
    command: gunicorn myStockroom.wsgi:application --bind 0.0.0.0:8010 --timeout 120 --workers=3 --threads=3 --worker-connections=1000 # параметры сервера gunicorn
    restart: always
    volumes:
      - ./:/myStockroom
      - ./static:/home/myStockroom/web/static
      - ./media:/home/myStockroom/web/mediafiles 
    expose:
      - 8010
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_PASSWORD=${SQL_PASSWORD} 

  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: adminDevelop
      POSTGRES_PASSWORD: zx23SA21
      POSTGRES_DB: buildAndTech
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./database/Init_db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database:/var/lib/postgresql/data

  nginx:
    build: ./nginx
    restart: always
    volumes:
      - ./static:/home/myStockroom/web/static
      - ./media:/home/myStockroom/web/mediafiles 
    ports:
      - 80:80
    depends_on:
      - web

  redis:
    image: redis:alpine
    restart: always

  celery:
    restart: always
    build:
      context: .
    command: celery -A myStockroom worker -l info
    volumes:
      - ./:/myStockroom
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - web

  celery-beat:
    build: .
    command: celery -A myStockroom beat -l info
    restart: always
    volumes:
      - .:/myStockroom
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis

  flower:
    build: .
    command: celery -A myStockroom flower --port=5555 --broker=redis://redis:6379/0
    volumes:
      - .:/myStockroom
    env_file:
      - ./.env.dev
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db


