stages:
  - docker
  - linting
  - testing
  - pages
  - build


services:
  - docker:24.0.5-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  PDM_CACHE_DIR: "CI_PROJECT_DIR/.cache/pdm"

#pages:
#  stage: pages
#  script:
#    - pdm run quarto render src/docs
#    - cp -r src/docs/_site public
#  artifacts:
#    paths:
#      - public
#  only:
#    - main


build:
  image: docker:24.0.5
  stage: docker
  only:
    changes:
     - backend/pdm.lock
     - backend/pyproject.toml
     - dockerfile
     - backend/dockerfile
     - .gitlab-ci.yml
  before_script:
    - apk add --no-cache py-pip
    - apk add docker-compose
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  
  variables:
    MOUNT_POINT: /backend/src
  script:
    - docker build -t $CI_REGISTRY/nikolajmakarovskij/stockroom/backend/build:latest --target builder ./backend
    - docker push $CI_REGISTRY/nikolajmakarovskij/stockroom/backend/build:latest
    - docker run -it -v $MOUNT_POINT:/src --name lint $CI_REGISTRY/nikolajmakarovskij/stockroom/backend/build:latest 

default:
  image: $CI_REGISTRY/nikolajmakarovskij/stockroom/backend/build:latest

ruff-running:
  stage: linting
  rules:
    - if: $CI_COMMIT_MESSAGE
  script:
    - cd backend
    - pdm lock -G lint
    - pdm install -G lint
    - PATH="/backend/.venv/bin:$PATH"
    - pdm run ruff check .

mypy-running:
  stage: linting
  rules:
    - if: $CI_COMMIT_MESSAGE
  script:
    - pdm run mypy .

#backend-testing:
#  stage: testing
#  rules:
#    - if: $CI_COMMIT_MESSAGE
# script:
#    - cd backend
#    - pdm lock -G test
#    - pdm install -G test
#    - PATH="/backend/.venv/bin:$PATH"
#    - pdm run pytest

#build-release:
#  stage: build
#  script:
#    - pdm install --check --prod --no-editable
#    - echo "building package"
#    - pdm build
#    - echo "Publish package"
#    - pdm config repository.company.url "https://gitlab.com/nikolajmakarovskij/mlops_ods"
#    - pdm config repository.company.username gitlab-ci-token
#    - pdm config repository.company.password ${CI_JOB_TOKEN}
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#  artifacts:
#    expire_in: never
#    paths:
#      - $CI_PROJECT_DIR/dist
