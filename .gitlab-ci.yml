stages:
  - typing
  - linting
  - testing
  - pages

image: docker:24.0.5
services:
    - docker:24.0.5-dind

.standard-rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

before_script:
  - apk add --no-cache docker-compose
  - docker version
  - docker-compose --version
  - cd backend
  - docker-compose up -d

backend-typnig:
  stage: typing
  rules:
    - if: $CI_COMMIT_MESSAGE
      changes:
        paths:
          - 'backend/src/*.{py}'
          - 'backend/pyproject.toml'
  script:
    - docker exec -t backend pdm run mypy .

backend-linting:
  stage: linting
  rules:
    - if: $CI_COMMIT_MESSAGE
      changes:
        paths:
          - 'backend/src/*.{py}'
          - 'backend/pyproject.toml'
  script:
    - docker exec -t backend pdm run ruff check .

backend-testing:
  stage: testing
  rules:
    - if: $CI_COMMIT_MESSAGE
      changes:
        paths:
          - 'backend/*'
          - 'docker-compose.yaml'
  script:
    - docker exec -t backend pdm run pytest --cov --junitxml=junit.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    paths:
      - backend/src/junit.xml
    reports:
      junit: 
        - backend/src/junit.xml

pages:
  stage: pages
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        paths:
          - 'backend/docs/*'
          - 'docs/*'
          - 'mkdocs.yml'
  script:
    - docker exec -t backend bash -c 'cd /backend && pdm run mkdocs build'
    - docker exec -t backend bash -c 'cd /backend && cp -a site/. /public'
  artifacts:
    paths:
      - public
  only:
    - master


