name: 

on: 
  push:
    branch: [backend, frontend]
  pull_request:
    branch: [master]

jobs:
  integration-tests:
    # На какой ОС будет работать виртуальная машина
    # Можно выбрать Ubuntu, Windows Server или macOS
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
    steps:
      - uses: actions/checkout@v3
      - uses: isbang/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose.yaml"
        env:
          DEBUG: 1
          SECRET_KEY: foo
          DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]
          SQL_ENGINE: django.db.backends.postgresql
          SQL_DATABASE: test_base
          SQL_USER: test_admin
          SQL_PASSWORD: zx23SA21
          SQL_HOST: db
          SQL_PORT: 5432
          SQL_PGDATA: "/var/lib/postgresql/data/pgdata"
          POSTGRES_USER: test_admin
          POSTGRES_PASSWORD: zx23SA21
          POSTGRES_DB: test_base
          PGDATA: "/var/lib/postgresql/data/pgdata"
          CELERY_BROKER: redis://redis:6379/0
          CELERY_BACKEND: redis://redis:6379/0
      - name: Check types backend
        run: docker exec backend pdm run mypy .
      - name: Linting backend
        run: docker exec backend uv run ruff check .
      - name: Typing backend
        run: docker exec backend uv run mypy .
      - name: Linting frontend
        run:  docker exec frontend npm run lint
      - name: Run backend tests
        run: docker exec backend uv run pytest --cov
      - name: Run frontend tests
        run: |
          docker exec frontend npx playwright install 
          docker exec frontend npx playwright install-deps 
          docker exec frontend npm run test:integration