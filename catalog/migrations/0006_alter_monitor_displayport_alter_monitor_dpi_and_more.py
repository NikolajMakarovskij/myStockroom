# Generated by Django 4.1.2 on 2022-10-31 04:14

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0005_signature_storage_alter_printer_trayside_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='monitor',
            name='displayPort',
            field=models.CharField(blank=True, help_text='Укажите количество DisplayPort', max_length=50, null=True, verbose_name='Количество DisplayPort'),
        ),
        migrations.AlterField(
            model_name='monitor',
            name='dpi',
            field=models.CharField(blank=True, help_text='Укажите плотность пикселей', max_length=50, null=True, verbose_name='Плотность пикселей'),
        ),
        migrations.AlterField(
            model_name='monitor',
            name='dvi',
            field=models.CharField(blank=True, help_text='Укажите количество DVI', max_length=50, null=True, verbose_name='Количество DVI'),
        ),
        migrations.AlterField(
            model_name='monitor',
            name='hdmi',
            field=models.CharField(blank=True, help_text='Укажите количество HDMI', max_length=50, null=True, verbose_name='Количество HDMI'),
        ),
        migrations.AlterField(
            model_name='monitor',
            name='usbPort',
            field=models.CharField(blank=True, help_text='Укажите количество USB', max_length=50, null=True, verbose_name='Количество USB'),
        ),
        migrations.AlterField(
            model_name='monitor',
            name='vga',
            field=models.CharField(blank=True, help_text='Укажите количество VGA', max_length=50, null=True, verbose_name='Количество VGA'),
        ),
        migrations.AlterField(
            model_name='signature',
            name='licenseKeyFileClose',
            field=models.FileField(blank=True, help_text='Прикрепите файл', null=True, upload_to='signature/Close/', verbose_name='Закрытая часть лицензии'),
        ),
        migrations.AlterField(
            model_name='signature',
            name='licenseKeyFileOpen',
            field=models.FileField(blank=True, help_text='Прикрепите файл', null=True, upload_to='signature/Open/', verbose_name='Открытая часть лицензии'),
        ),
        migrations.AlterField(
            model_name='storage',
            name='name',
            field=models.CharField(help_text='Введите название', max_length=50, verbose_name='Название'),
        ),
        migrations.CreateModel(
            name='cpu',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Введите название модели', max_length=50, verbose_name='Модель')),
                ('serial', models.CharField(blank=True, help_text='Введите серийный номер', max_length=50, null=True, verbose_name='Серийный номер')),
                ('serialImg', models.ImageField(blank=True, help_text='прикрепите файл', null=True, upload_to='monitor/serial/', verbose_name='Фото серийного номера')),
                ('invent', models.CharField(blank=True, help_text='Введите инвентарный номер', max_length=50, null=True, verbose_name='Инвентарный номер')),
                ('inventImg', models.ImageField(blank=True, help_text='прикрепите файл', null=True, upload_to='monitor/invent/', verbose_name='Фото инвентарного номера')),
                ('socket', models.CharField(blank=True, help_text='Укажите сокет', max_length=50, null=True, verbose_name='Сокет')),
                ('frequency', models.CharField(blank=True, help_text='Укажите частоту', max_length=50, null=True, verbose_name='Частота')),
                ('l1', models.CharField(blank=True, help_text='Укажите размер L1 cache', max_length=50, null=True, verbose_name='L1 cache')),
                ('l2', models.CharField(blank=True, help_text='Укажите размер L2 cache', max_length=50, null=True, verbose_name='L2 cache')),
                ('l3', models.CharField(blank=True, help_text='Укажите размер L3 cache', max_length=50, null=True, verbose_name='L3 cache')),
                ('core', models.CharField(blank=True, help_text='Укажите количество ядер', max_length=50, null=True, verbose_name='Количество ядер')),
                ('thread', models.CharField(blank=True, help_text='Укажите количество потоков', max_length=50, null=True, verbose_name='Количество потоков')),
                ('memory', models.CharField(blank=True, help_text='Укажите тип RAM', max_length=50, null=True, verbose_name='Тип RAM')),
                ('memoryCapacity', models.CharField(blank=True, help_text='Укажите поддерживаемый обЪем памяти', max_length=50, null=True, verbose_name='Поддерживаемый обЪем памяти')),
                ('channelsCapacity', models.CharField(blank=True, help_text='Укажите количество каналов памяти', max_length=50, null=True, verbose_name='Количество каналов памяти')),
                ('tdp', models.CharField(blank=True, help_text='Укажите TDP', max_length=50, null=True, verbose_name='TDP')),
                ('supply', models.CharField(blank=True, help_text='Укажите тип питания', max_length=50, null=True, verbose_name='Питание')),
                ('score', models.IntegerField(blank=True, help_text='Введите количество на складе', null=True, verbose_name='Остаток на складе')),
                ('manufacturer', models.ForeignKey(blank=True, help_text='Укажите производителя', null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.manufacturer', verbose_name='Производитель')),
            ],
            options={
                'verbose_name_plural': 'CPU',
            },
        ),
        migrations.AlterField(
            model_name='workstation',
            name='cpu',
            field=models.ForeignKey(blank=True, help_text='Укажите CPU', null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.cpu', verbose_name='CPU'),
        ),
    ]
