[project]
name = "stockroom"
version = "0.8.0"
description = "The project is designed to maintain a database with equipment and consumables"
authors = [
    {name = "Makarovskiy Nikolay", email = "adrameleh666@gmail.com"},
]
requires-python = ">=3.13"
readme = "README.md"
license = {file = "LICENSE"}

dependencies = [
    "asgiref >=3.8.1",
    "attrs >=24.3.0",
    "celery >=5.4.0",
    "crispy-bootstrap5 >=2024.10",
    "diff-match-patch >=20241021",
    "Django >=5.1.4",
    "django-adaptors >=0.2.5",
    "django-appconf >=1.0.6",
    "django-bootstrap5 >=24.3",
    "django-celery-beat >=2.7.0",
    "django-cors-headers >=4.6.0",
    "django-crispy-forms >=2.3",
    "django-filter >=24.3",
    "django-import-export >=4.3.3",
    "django-select2 >=8.2.3",
    "djangorestframework >=3.15.2",
    "djangorestframework-simplejwt >=5.3.1",
    "flower >=2.0.1",
    "gunicorn >=23.0.0",
    "hiredis >=3.1.0",
    "markdown >=3.7",
    "Pillow >=11.1.0",
    "psycopg[binary,pool] >=3.2.3",
    "python-dateutil >=2.9.post0",
    "pytz >=2024.2",
    "redis >=5.2.1",
    "setuptools >=75.7.0",
    "six >=1.17.0",
    "sqlparse >=0.5.3",
    "tablib[all] >=3.7.0",
]

[dependency-groups]
docs = [
    "mkdocs >=1.6.1",
    "mkdocs-material >=9.5.49",
    "mkdocstrings[python] >=0.27.0",
]
lint = [
    "celery-types >=0.22.0",
    "django-stubs >=5.1.1",
    "djangorestframework-stubs >=3.15.2",
    "isort >=5.13.2",
    "mypy >=1.13.0",
    "pre-commit >=4.0.1",
    "ruff >=0.8.6",
]
test = [
    "junitxml >=0.7",
    "pytest >=8.3.4",
    "pytest-cov >=6.0.0",
    "pytest-django >=4.9.0",
    "pytest-xdist >=3.6.1",
    ]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/"]

[tool.uv]
default-groups = ["lint", "test", "docs"]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "__pycache__",
    "static/",
    "media/"
]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 4
skip_gitignore = true
skip_glob = [
    "**/migrations/*",
    "**/settings/*",
    "**/static/*",
    "**/media/*"
]
src_paths = [
    "./src",
]

[tool.mypy]
mypy_path = "./src"
follow_imports = "normal"
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
show_error_codes = true
warn_unused_ignores = false
show_error_context = true
exclude = [
    '^pyproject.toml$',
]
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
module = [
    "import_export"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
pythonpath = "./src"

[tool.django-stubs]
django_settings_module = "backend.settings.production"
